package cn.tiger.entity.account;
// Generated 2016-4-29 19:14:11 by Hibernate Tools 3.5.0.Final

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.apache.commons.lang.builder.ToStringBuilder;
import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;

/**
 * AcctAuthority generated by hbm2java
 */

@Entity
@Table(name = "ACCT_AUTHORITY")
/*ehcache已经作为hibernate的默认缓存方案（二级缓存方案 sessionfactory级别）， 
在项目中有针对性的使用缓存将对性能的提升右很大的帮助。 

需要在hibernate.cfg.xml中配置 <property name="cache.provider_class">org.hibernate.cache.EhCacheProvider</property> 
*/

//更新不频繁几个小时或更长
@Cache(usage = CacheConcurrencyStrategy.NONSTRICT_READ_WRITE)
public class AcctAuthority implements java.io.Serializable {

	private Long id;
	private String name;

	/**
	 * SpringSecurity中默认的角色/授权名前缀.
	 */
	public static final String AUTHORITY_PREFIX = "ROLE_";
	
	public AcctAuthority() {
	}

	public AcctAuthority(Long id, String name) {
		this.id = id;
		this.name = name;
	}

	//strategy 策略
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@Column(nullable = false, unique = true)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}
	
	//@Transient表示该属性并非一个到数据库表的字段的映射,ORM框架将忽略该属性.
	@Transient
	public String getPrefixedName() {
		return AUTHORITY_PREFIX + name;
	}
	
	@Override
	public String toString() {
		System.out.println("------------\n"+ToStringBuilder.reflectionToString(this)+"------------\n");
		return ToStringBuilder.reflectionToString(this);
	}

}
